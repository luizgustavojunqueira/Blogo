package pages

import (
	"github.com/luizgustavojunqueira/Blogo/internal/repository"
	"github.com/luizgustavojunqueira/Blogo/internal/templates/components"
)

// Root component that wraps all content
templ Root(title string, component templ.Component) {
	<!DOCTYPE html>
	<html
		lang="pt-br"
		x-data="{darkMode: localStorage.getItem('dark') === 'true'}"
		x-init="$watch('darkMode', val => localStorage.setItem('dark', val))"
		x-bind:class="{ 'dark': darkMode }"
		class="light dark:bg-darkgray font-roboto min-h-screen scroll-smooth bg-slate-100 text-justify text-lg"
	>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link href="/static/styles.css" rel="stylesheet"/>
			<link rel="icon" href="/static/images/favicon.png"/>
			<script src="/static/js/htmx.js"></script>
			<script src="/static/js/htmx-response-targets.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<title>{ title }</title>
		</head>
		<body hx-ext="response-targets" class="dark:bg-darkgray min-h-screen bg-slate-100 text-black dark:text-white ">
			@component
		</body>
	</html>
}

templ MainPage(blogname, title string, posts []repository.Post, authenticated bool) {
	if authenticated {
		@components.Header(blogname, []string{"New Post", "Logout"}, []string{"/editor", "/logout"})
	} else {
		@components.Header(blogname, []string{"Login"}, []string{"/login"})
	}
	<ul id="posts-list" class="flex min-h-screen flex-col items-center">
		for _, post := range posts {
			@components.PostCard(post, authenticated)
		}
	</ul>
}

templ EditorPage(blogname, pagetitle string, post repository.Post, edit bool, authenticated bool) {
	if authenticated {
		@components.Header(blogname, []string{"Back to Home", "Logout"}, []string{"/", "/logout"})
	} else {
		@components.Header(blogname, []string{"Back to Home", "Login"}, []string{"/", "/login"})
	}
	<main class="grid max-h-[calc(100vh-var(--spacing)*17)] min-h-full grid-cols-2">
		<form
			class="border-darkgray border-r-5 flex h-[calc(100vh-var(--spacing)*17)] max-h-[calc(100vh-var(--spacing)*17)] w-full flex-col items-center justify-start p-2 dark:border-slate-100  "
			hx-post="/post/parse"
			hx-target="#preview"
			hx-swap="innerHTML"
			hx-trigger="keyup delay:500ms, load"
		>
			<section class="flex w-full flex-col items-center justify-center ">
				if edit {
					<input
						class="border-1 border-darkgray hover:bg-darkgray w-full rounded-md p-3 text-lg hover:cursor-pointer hover:text-white dark:border-slate-100 dark:hover:bg-slate-100 dark:hover:text-black"
						type="button"
						value="Save"
						hx-post={ "/post/edit/" + post.Slug }
						hx-target-400="#teste"
						hx-target-401="#teste"
					/>
				} else {
					<input
						class="border-1 border-darkgray hover:bg-darkgray w-full rounded-md p-3 text-lg hover:cursor-pointer hover:text-white dark:border-slate-100 dark:hover:bg-slate-100 dark:hover:text-black"
						type="button"
						value="Save"
						hx-post="/post/new"
						hx-target-400="#teste"
						hx-target-401="#teste"
					/>
				}
				<span id="teste" class="text-red-500"></span>
				<label for="title" class="w-full text-lg font-bold">Title</label>
				<input
					class="border-1 border-darkgray w-full rounded-md p-3 text-lg dark:border-slate-100"
					type="text"
					name="title"
					id="title"
					value={ post.Title }
				/>
				<label for="slug" class="w-full text-lg font-bold">Slug</label>
				<input
					class="border-1 border-darkgray w-full rounded-md p-3 text-lg dark:border-slate-100"
					type="text"
					name="slug"
					id="slug"
					value={ post.Slug }
				/>
				<label for="description" class="w-full text-lg font-bold">Description</label>
				<input
					class="border-1 border-darkgray w-full rounded-md p-3 text-lg dark:border-slate-100"
					type="text"
					name="description"
					id="description"
					value={ post.Description.String }
				/>
				<label for="content" class="w-full text-lg font-bold">Content</label>
			</section>
			<textarea
				class="border-1 border-darkgray h-full w-full resize-none rounded-md p-3 dark:border-slate-100"
				name="content"
				id="content"
				cols="30"
				rows="10"
			>
				{ post.Content }
			</textarea>
		</form>
		<section
			id="preview"
			class="flex h-[calc(100vh-var(--spacing)*17)] max-h-[calc(100vh-var(--spacing)*17)] w-full max-w-[50vw] flex-col items-center overflow-scroll overflow-x-hidden p-3"
		>
			@components.Markdown(post)
		</section>
	</main>
}

templ PostPage(blogname, title string, post repository.Post, authenticated bool) {
	if authenticated {
		@components.Header(blogname, []string{"Back to Home", "Edit", "Logout"}, []string{"/", "/editor/" + post.Slug,
			"/logout"})
	} else {
		@components.Header(blogname, []string{"Back to Home", "Login"}, []string{"/", "/login"})
	}
	<section class="flex flex-col items-center justify-center p-0 pt-10 sm:p-4">
		@components.Markdown(post)
	</section>
}

templ LoginPage(blogname, title string) {
	@components.Header(blogname, []string{"Back to Home"}, []string{"/"})
	<main class="flex flex-col items-center justify-center p-4 pt-10">
		<form
			class="dark:bg-lightgray flex flex-col items-center justify-center rounded-xl bg-slate-200 p-10 text-black dark:text-white"
			hx-post="/login"
			hx-ext="response-targets"
			hx-target-401="#error"
		>
			<label for="username" class="w-full text-lg font-bold">Username</label>
			<input
				class="border-1 dark:bg-darkgray text-darkgray w-full  rounded-md bg-slate-100 p-3 text-lg dark:text-slate-100"
				type="text"
				name="username"
				id="username"
			/>
			<label for="password" class="w-full text-lg font-bold">Password</label>
			<input
				class="border-1 dark:bg-darkgray text-darkgray w-full  rounded-md bg-slate-100 p-3 text-lg dark:text-slate-100"
				type="password"
				name="password"
				id="password"
			/>
			<span id="error" class="text-red-500"></span>
			<input
				class="dark:bg-darkgray text-darkgray dark:hover:bg-midgray mt-2  w-full rounded-md bg-white
                p-3 text-lg transition-colors hover:cursor-pointer hover:bg-slate-100/95 dark:text-slate-100"
				type="submit"
				value="Login"
			/>
		</form>
	</main>
}
