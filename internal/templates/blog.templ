package templates

import "github.com/luizgustavojunqueira/Blogo/internal/repository"
import "time"

// The root component that contains the HTML tag
templ Root(title string, component string) {
<!DOCTYPE html>
<html lang="pt-br" class="min-h-screen bg-slate-100 dark:bg-darkgray font-roboto text-lg">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="/static/styles.css" rel="stylesheet" />
    <link rel="icon" href="/static/images/favicon.png" />
    <script src="/static/js/htmx.js"></script>
    <title>{ title }</title>
</head>

<body hx-ext="response-targets" class="min-h-screen bg-slate-100 dark:bg-darkgray text-black dark:text-white ">
    @templ.Raw(component)
</body>

</html>
}

templ MainPage(blogname, title string, posts []repository.Post, authenticated bool) {
if authenticated {
@header(blogname, []string{"New Post", "Logout"}, []string{"/editor", "/logout"})
} else {
@header(blogname, []string{"Login"}, []string{"/login"})
}
<ul id="posts-list" class="min-h-screen flex flex-col items-center">
    for _, post := range posts {
    @PostCard(post, authenticated)
    }
</ul>
}

templ Editor(blogname, pagetitle string, content string, title string, slug string, edit bool, authenticated bool) {
class="min-h-full max-h-screen bg-slate-100 dark:bg-darkgray text-black dark:text-white"
>
if authenticated {
@header(blogname, []string{"Back to Home", "Logout"}, []string{"/", "/logout"})
} else {
@header(blogname, []string{"Back to Home"}, []string{"/"})
}
<main class="grid grid-cols-2 min-h-full max-h-[calc(100vh-var(--spacing)*17)]">
    <form
        class="w-full flex flex-col justify-start items-center border-darkgray dark:border-slate-100 border-r-5 p-2 max-h-[calc(100vh-var(--spacing)*17)] h-[calc(100vh-var(--spacing)*17)]  "
        hx-post="/post/parse" hx-target="#preview" hx-swap="innerHTML" hx-trigger="keyup delay:500ms, load">
        <section class="w-full flex flex-col justify-center items-center ">
            if edit {
            <input
                class="w-full p-3 text-lg border-1 border-darkgray dark:border-slate-100 rounded-md hover:bg-darkgray hover:text-white dark:hover:bg-slate-100 dark:hover:text-black hover:cursor-pointer"
                type="button" value="Save" hx-post={ "/post/edit/" + slug } hx-target-400="#teste"
                hx-target-401="#teste" />
            } else {
            <input
                class="w-full p-3 text-lg border-1 border-darkgray dark:border-slate-100 rounded-md hover:bg-darkgray hover:text-white dark:hover:bg-slate-100 dark:hover:text-black hover:cursor-pointer"
                type="button" value="Save" hx-post="/post/new" hx-target-400="#teste" hx-target-401="#teste" />
            }
            <span id="teste" class="text-red-500"></span>
            <label for="title" class="w-full text-lg font-bold">Title</label>
            <input class="w-full p-3 text-lg border-1 border-darkgray dark:border-slate-100 rounded-md" type="text"
                name="title" id="title" value={ title } />
            <label for="slug" class="w-full text-lg font-bold">Slug</label>
            <input class="w-full p-3 text-lg border-1 border-darkgray dark:border-slate-100 rounded-md" type="text"
                name="slug" id="slug" value={ slug } />
            <label for="content" class="w-full text-lg font-bold">Content</label>
        </section>
        <textarea class="w-full resize-none h-full p-3 border-1 border-darkgray dark:border-slate-100 rounded-md"
            name="content" id="content" cols="30" rows="10">
            { content }
        </textarea>
    </form>
    <section id="preview"
        class="flex flex-col items-center w-full overflow-scroll p-3 max-w-[50vw] max-h-[calc(100vh-var(--spacing)*17)] h-[calc(100vh-var(--spacing)*17)] overflow-x-hidden">
        @Markdown(content, title, slug, time.Now(), time.Now())
    </section>
</main>
}

templ header(title string, linksNames []string, links []string) {
<header
    class="bg-slate-100 text-black min-w-full h-17 flex flex-row justify-between p-5 items-center dark:bg-darkgray dark:text-white">
    <h1 class="text-2xl font-bold"><a href="/">{ title }</a></h1>
    <section>
        for i, name := range linksNames {
        <a href={ templ.SafeURL(links[i]) }
            class="mx-2 bg-slate-200 p-2 rounded-sm hover:bg-slate-300 text-darkgray dark:bg-lightgray dark:hover:bg-midgray dark:text-white transition-colors">
            {
            name }
        </a>
        }
    </section>
</header>
}

templ PostPage(blogname, title string, post repository.Post, authenticated bool) {
if authenticated {
@header(blogname, []string{"Back to Home", "Edit", "Logout"}, []string{"/", "/editor/" + post.Slug,
"/logout"})
} else {
@header(blogname, []string{"Back to Home"}, []string{"/"})
}
<section class="flex flex-col justify-center items-center p-4 pt-10">
    @Markdown(post.ParsedContent, post.Title, post.Slug, post.CreatedAt.Time, post.ModifiedAt.Time)
</section>
}

templ LoginPage(blogname, title string) {
@header(blogname, []string{"Back to Home"}, []string{"/"})
<main class="flex flex-col justify-center items-center p-4 pt-10">
    <form
        class="flex flex-col justify-center items-center rounded-xl p-10 bg-slate-200 dark:bg-lightgray dark:text-white text-black"
        hx-post="/login" hx-ext="response-targets" hx-target-401="#error">
        <label for="username" class="w-full text-lg font-bold">Username</label>
        <input
            class="w-full p-3 text-lg border-1  rounded-md bg-slate-100 dark:bg-darkgray text-darkgray dark:text-slate-100"
            type="text" name="username" id="username" />
        <label for="password" class="w-full text-lg font-bold">Password</label>
        <input
            class="w-full p-3 text-lg border-1  rounded-md bg-slate-100 dark:bg-darkgray text-darkgray dark:text-slate-100"
            type="password" name="password" id="password" />
        <span id="error" class="text-red-500"></span>
        <input
            class="w-full p-3 mt-2 text-lg  bg-white dark:bg-darkgray rounded-md
                text-darkgray dark:text-slate-100 hover:bg-slate-100/95 dark:hover:bg-midgray hover:cursor-pointer transition-colors"
            type="submit" value="Login" />
    </form>
</main>
}
